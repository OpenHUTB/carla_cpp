{
    // 定义项目的文件夹相关信息
    "folders":[
        {
            // 文件夹的路径
            "path":"..",
            // 要排除的文件模式列表
          "file_exclude_patterns":[
    // 排除所有以".VC.db"结尾的文件。这类文件通常是 Visual C++ 项目编译过程中生成的数据库文件，一般包含项目构建相关的临时数据等信息，在很多常规的代码管理、文件查看等场景下不需要关注它们，所以进行排除。
    "*.VC.db",
    // 排除所有以".VC.opendb"结尾的文件，和".VC.db"类似，它也是 Visual C++ 项目相关的数据库文件，多为项目构建等操作产生的辅助性文件，对于非 Visual C++ 项目构建相关的处理流程来说，通常可以忽略，因此将其排除在外。
    "*.VC.opendb",
    // 排除所有以".gdb_history"结尾的文件。".gdb_history"文件是 GNU 调试器（GDB）在调试过程中记录调试历史的文件，里面主要是调试操作相关的记录信息，在日常开发中除了查看调试历史外，基本不会用到，所以在大多数一般性的文件操作场景中可将其排除。
    "*.gdb_history",
    // 排除所有以".kdev4"结尾的文件。这通常是与 KDevelop 4 集成开发环境相关的特定文件，可能包含该开发环境下项目特有的配置、缓存等信息，在不使用 KDevelop 4 进行开发或者处理相关项目时，这些文件是不需要的，故予以排除。
    "*.kdev4",
    // 排除所有以".pri"结尾的文件。".pri"文件常见于一些特定的构建系统（比如 Qt 构建系统）中，用于存储项目构建相关的配置等内容，若当前操作不涉及对应构建系统的相关流程，那么这类文件就可以被排除，避免干扰其他操作。
    "*.pri",
    // 排除所有以".pro"结尾的文件。".pro"文件一般是 Qt 项目的工程文件，里面包含了 Qt 项目的各种配置信息，在非 Qt 项目开发或者不需要处理该工程文件的场景下，可将其排除，因为它与其他类型项目的常规操作关联性不大。
    "*.pro",
    // 排除所有以".py[cod]"结尾的文件，这里的".py[cod]"通配符涵盖了".pyc"和".pyo"文件类型。".pyc"是 Python 代码编译后的字节码文件，".pyo"是经过优化的 Python 字节码文件，在查看原始 Python 代码逻辑、进行代码版本管理等常见场景中，通常不需要直接操作这些编译后的文件，所以将其排除。
    "*.py[cod]",
    // 排除所有以".sln"结尾的文件。".sln"文件是 Visual Studio 开发环境中的解决方案文件，用于组织和管理 Visual Studio 项目中的多个工程等内容，在不涉及 Visual Studio 项目开发及管理的场景下，这类文件没有处理的必要，因此将其排除。
    "*.sln",
    // 排除所有以".stackdump"结尾的文件。".stackdump"文件往往是程序崩溃时生成的栈转储文件，其主要作用是帮助分析程序崩溃原因，在正常的代码开发、代码浏览等常规操作中，通常不会用到它，所以可以将其排除。
    "*.stackdump",
    // 排除所有以".sublime-workspace"结尾的文件。这是 Sublime Text 文本编辑器创建的工作区文件，用于保存该编辑器中项目相关的一些工作区配置信息，在不使用 Sublime Text 或者不需要处理其工作区配置的场景下，这类文件可以被排除。
    "*.sublime-workspace",
    // 排除所有以".uasset"结尾的文件。".uasset"文件常见于使用 Unreal Engine（虚幻引擎）进行游戏开发时的资源文件，里面包含了游戏中的各种资源数据，在非虚幻引擎游戏资源相关的操作场景中，这些文件通常不需要处理，所以将其排除。
    "*.uasset",
    // 排除所有以".umap"结尾的文件。在 Unreal Engine 游戏开发里，".umap"文件一般是地图相关的文件，用于存储游戏地图的相关数据，在不涉及虚幻引擎地图操作的场景下，可排除这类文件。
    "*.umap",
    // 排除所有以".workspace"结尾的文件。".workspace"文件常用于表示不同开发工具中的工作区概念，里面保存着对应工作区的配置等信息，根据具体的使用场景，如果不需要处理这类工作区相关逻辑，就可以将其排除。
    "*.workspace",
    // 排除所有名为"CodeCompletionFolders.txt"的文件。从文件名推测，该文件可能与代码自动补全功能中相关文件夹的配置有关，在不需要处理代码自动补全相关配置的场景下，可将其排除。
    "*CodeCompletionFolders.txt",
    // 排除所有名为"CodeLitePreProcessor.txt"的文件。推测其与 CodeLite 开发环境里的预处理器相关配置有关，在不涉及 CodeLite 开发环境操作以及预处理器相关处理的场景下，可排除这类文件。
    "*CodeLitePreProcessor.txt",
    // 排除所有以".tags"开头的文件。这类文件在不同的编辑器或工具中可能用于代码标签、索引等相关功能，具体用途因工具而异，但在很多一般性的文件处理场景中，不一定需要关注它们，所以进行排除。
    ".tags*",
    // 排除名为"core"的文件或目录（具体取决于所在的操作环境及上下文），不清楚其具体用途的情况下，按照配置要求将其排除在外，可能它是某个特定应用场景下不需要处理的文件或目录。
    "core"
]
            ],
            // 要排除的文件夹模式列表
            "folder_exclude_patterns":[
                "*.egg-info",
                ".clang",
                ".codelite",
                ".kdev4",
                ".vs",
                ".vscode",
                "Binaries",
                "Build",
                "DerivedDataCache",
                "Dist",
                "Doxygen",
                "Examples/CppClient/*",
                "Intermediate",
                "PythonAPI/carla/build",
                "PythonAPI/carla/dependencies",
                "PythonAPI/carla/dist",
                "Saved",
                "Unreal/CarlaUE4/Content/Carla/*",
                "Unreal/CarlaUE4/Plugins/Carla/CarlaDependencies",
                "__pycache__",
                "_site"
            ]
        }
    ],
    // 项目的设置信息
    "settings":{
        // 保存时确保文件末尾有新行
        "ensure_newline_at_eof_on_save":true,
        // 制表符大小
        "tab_size":2,
        // 将制表符转换为空格
        "translate_tabs_to_spaces":true,
        // 保存时裁剪尾随的空格
        "trim_trailing_white_space_on_save":true
    },
    // 构建系统信息
    "build_systems":[
        {
            // 构建系统的名称
            "name":"CARLA - make CarlaUE4Editor",
            // 工作目录，使用变量表示项目路径的上级目录
            "working_dir":"${project_path}/..",
            // 文件正则表达式，用于匹配错误信息
            "file_regex":"(Unreal\\/CarlaUE4\\/[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            // 语法
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 CarlaUE4Editor
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make CarlaUE4Editor"
            }
        },
        {
            "name":"CARLA - make LibCarla (All)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 LibCarla
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make LibCarla"
            }
        },
        {
            "name":"CARLA - make LibCarla (Server All)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 LibCarla 的服务器端
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make LibCarla.server"
            }
        },
        {
            "name":"CARLA - make LibCarla (Server Debug)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 LibCarla 的服务器端的调试版本
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make LibCarla.server.debug"
            }
        },
        {
            "name":"CARLA - make LibCarla (Server Release)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 LibCarla 的服务器端的发布版本
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make LibCarla.server.release"
            }
        },
        {
            "name":"CARLA - make LibCarla (Client All)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 LibCarla 的客户端
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make LibCarla.client"
            }
        },
        {
            "name":"CARLA - make LibCarla (Client Debug)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 LibCarla 的客户端的调试版本
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make LibCarla.client.debug"
            }
        },
        {
            "name":"CARLA - make LibCarla (Client Release)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 LibCarla 的客户端的发布版本
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make LibCarla.client.release"
            }
        },
        {
            "name":"CARLA - make PythonAPI (All)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 PythonAPI
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make PythonAPI"
            }
        },
        {
            "name":"CARLA - make PythonAPI (Python 2)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 PythonAPI 的 Python 2 版本
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make PythonAPI.2"
            }
        },
        {
            "name":"CARLA - make PythonAPI (Python 3)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，构建 PythonAPI 的 Python 3 版本
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make PythonAPI.3"
            }
        },
        {
            "name":"CARLA - make check (All)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，进行全面检查
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make check"
            }
        },
        {
            "name":"CARLA - make check (LibCarla All)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，对 LibCarla 进行全面检查
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make check.LibCarla"
            }
        },
        {
            "name":"CARLA - make check (LibCarla Debug)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，对 LibCarla 的调试版本进行检查
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make check.LibCarla.debug"
            }
        },
        {
            "name":"CARLA - make check (LibCarla Release)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，对 LibCarla 的发布版本进行检查
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make check.LibCarla.release"
            }
        },
        {
            "name":"CARLA - make check (LibCarla with GDB)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，使用 GDB 对 LibCarla 的调试版本进行检查
                "shell_cmd":"gnome-terminal --maximize -e 'make check.LibCarla.debug ARGS=\"--gdb\"'"
            }
        },
        {
            "name":"CARLA - make check (PythonAPI All)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，对 PythonAPI 进行全面检查
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make check.PythonAPI"
            }
        },
        {
            "name":"CARLA - make check (PythonAPI for Python 2)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，对 PythonAPI 的 Python 2 版本进行检查
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make check.PythonAPI.2"
            }
        },
        {
            "name":"CARLA - make check (PythonAPI for Python 3)",
            "working_dir":"${project_path}/..",
            "file_regex":"^../../([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，对 PythonAPI 的 Python 3 版本进行检查
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make check.PythonAPI.3"
            }
        },
        {
            "name":"CARLA - make clean",
            "working_dir":"${project_path}/..",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，执行清理操作
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make clean"
            }
        },
        {
            "name":"CARLA - Pylint all",
            "working_dir":"${project_path}/..",
            "file_regex":"^([^\n:]*):(-?[0-9]+):?(-?[0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，使用 Pylint 对 PythonAPI 下的所有 Python 文件进行检查
                "shell_cmd":"shopt -s globstar; pylint -rn --msg-template='{path}:{line}:{column}: {msg_id}: {msg}' --disable=R,C --rcfile=PythonAPI/.pylintrc PythonAPI/**/*.py"
            }
        },
        {
            "name":"CARLA - Pylint this file",
            "selector":"source.python",
            "working_dir":"${project_path}/..",
            "file_regex":"^([^\n:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，使用 Pylint 对当前文件进行检查
                "shell_cmd":"pylint -rn --msg-template='{path}:{line}:{column}: {msg_id}: {msg}' --disable=R,C --rcfile=PythonAPI/.pylintrc ${file}"
            }
        },
        {
            "name":"CARLA - Prettify this file",
            "working_dir":"${project_path}/..",
            "file_regex":"^([^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"Packages/Makefile/Make Output.sublime-syntax",
            "linux":{
                // Linux 下的 shell 命令，美化当前文件
                "shell_cmd":"CARLA_BUILD_NO_COLOR=true make pretty ARGS=-f${file}"
            }
        }
    ]
}
