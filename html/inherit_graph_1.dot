digraph "类继承关系图"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [id="Node000000",label="AActor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/da4/classAActor.html",tooltip=" "];
  Node0 -> Node1 [id="edge2_Node000000_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 [id="Node000001",label="AActorWithRandomEngine",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d2a/classAActorWithRandomEngine.html",tooltip="Base class for actors containing a random engine with a fixed seed."];
  Node0 -> Node2 [id="edge3_Node000000_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="ABaseVegetationActor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/de2/classABaseVegetationActor.html",tooltip=" "];
  Node0 -> Node3 [id="edge4_Node000000_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="ACarlaActorFactory",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d84/classACarlaActorFactory.html",tooltip="Base class for Carla actor factories."];
  Node3 -> Node4 [id="edge5_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="AAIControllerFactory",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d37/classAAIControllerFactory.html",tooltip="负责生成AI控制器的工厂"];
  Node3 -> Node5 [id="edge6_Node000003_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="ACarlaActorFactoryBlueprint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/ddb/classACarlaActorFactoryBlueprint.html",tooltip="Base class for Blueprints implementing ACarlaActorFactory interface."];
  Node3 -> Node6 [id="edge7_Node000003_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="ASensorFactory",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d9e/classASensorFactory.html",tooltip="Factory in charge of spawning sensors."];
  Node3 -> Node7 [id="edge8_Node000003_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="AStaticMeshFactory",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d98/classAStaticMeshFactory.html",tooltip="Factory in charge of spawning static meshes."];
  Node3 -> Node8 [id="edge9_Node000003_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="ATriggerFactory",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/df9/classATriggerFactory.html",tooltip="Factory in charge of spawning sensors."];
  Node3 -> Node9 [id="edge10_Node000003_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="AUtilActorFactory",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/de9/classAUtilActorFactory.html",tooltip="Factory in charge of spawning static meshes."];
  Node0 -> Node10 [id="edge11_Node000000_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="ACarlaRecorder",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/db9/classACarlaRecorder.html",tooltip="Recorder for the simulation"];
  Node0 -> Node11 [id="edge12_Node000000_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="ACityMapMeshHolder",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d1a/classACityMapMeshHolder.html",tooltip="Holds the static meshes and instances necessary for building a city map."];
  Node11 -> Node12 [id="edge13_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="ACityMapGenerator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/ddb/classACityMapGenerator.html",tooltip="Generates a random city using the meshes provided."];
  Node0 -> Node13 [id="edge14_Node000000_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="AFrictionTrigger",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/db9/classAFrictionTrigger.html",tooltip=" "];
  Node0 -> Node14 [id="edge15_Node000000_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="ALargeMapManager",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d4b/classALargeMapManager.html",tooltip=" "];
  Node0 -> Node15 [id="edge16_Node000000_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="AOpenDriveActor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d2d/classAOpenDriveActor.html",tooltip=" "];
  Node0 -> Node16 [id="edge17_Node000000_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="AOpenDriveGenerator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/db0/classAOpenDriveGenerator.html",tooltip=" "];
  Node0 -> Node17 [id="edge18_Node000000_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="AProceduralBuilding",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d3c/classAProceduralBuilding.html",tooltip=" "];
  Node0 -> Node18 [id="edge19_Node000000_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="AProceduralMeshActor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/d19/classAProceduralMeshActor.html",tooltip=" "];
  Node0 -> Node19 [id="edge20_Node000000_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="ARoadPainterWrapper",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d35/classARoadPainterWrapper.html",tooltip=" "];
  Node0 -> Node20 [id="edge21_Node000000_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="ARoutePlanner",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d0f/classARoutePlanner.html",tooltip="Assign a random route to every ACarlaWheeledVehicle entering the trigger volume."];
  Node0 -> Node21 [id="edge22_Node000000_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="ASensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d01/classASensor.html",tooltip="Base class for sensors."];
  Node21 -> Node22 [id="edge23_Node000021_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="ACollisionSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/de9/classACollisionSensor.html",tooltip="A sensor to register collisions."];
  Node21 -> Node23 [id="edge24_Node000021_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="ACustomV2XSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d1f/classACustomV2XSensor.html",tooltip=" "];
  Node21 -> Node24 [id="edge25_Node000021_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="AGnssSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dc3/classAGnssSensor.html",tooltip="Gnss sensor representation The actual position calculation is done one server side"];
  Node21 -> Node25 [id="edge26_Node000021_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="AInertialMeasurementUnit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/de0/classAInertialMeasurementUnit.html",tooltip=" "];
  Node21 -> Node26 [id="edge27_Node000021_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="ALaneInvasionSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d57/classALaneInvasionSensor.html",tooltip="LaneInvasion sensor representation The actual position calculation is done one client side"];
  Node21 -> Node27 [id="edge28_Node000021_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="AObstacleDetectionSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d93/classAObstacleDetectionSensor.html",tooltip="A sensor to register collisions."];
  Node21 -> Node28 [id="edge29_Node000021_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="ARadar",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d27/classARadar.html",tooltip="A ray-cast based Radar sensor."];
  Node21 -> Node29 [id="edge30_Node000021_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="ARayCastSemanticLidar",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d15/classARayCastSemanticLidar.html",tooltip="A ray-cast based Lidar sensor."];
  Node29 -> Node30 [id="edge31_Node000029_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="ARayCastLidar",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d5/de4/classARayCastLidar.html",tooltip="A ray-cast based Lidar sensor."];
  Node21 -> Node31 [id="edge32_Node000021_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="ARssSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/ded/classARssSensor.html",tooltip="RSS sensor representation The actual calculation is done one client side"];
  Node21 -> Node32 [id="edge33_Node000021_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="ASceneCaptureSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d60/classASceneCaptureSensor.html",tooltip="Base class for sensors using a USceneCaptureComponent2D for rendering the scene."];
  Node32 -> Node33 [id="edge34_Node000032_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="AShaderBasedSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dd3/classAShaderBasedSensor.html",tooltip="A sensor that produces data by applying post-process materials (shaders) to a scene capture image."];
  Node33 -> Node34 [id="edge35_Node000033_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="ADVSCamera",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/daf/classADVSCamera.html",tooltip="Sensor that produce Dynamic Vision Events"];
  Node33 -> Node35 [id="edge36_Node000033_Node000035",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="ADepthCamera",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/d36/classADepthCamera.html",tooltip="Sensor that produces \"depth\" images."];
  Node33 -> Node36 [id="edge37_Node000033_Node000036",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="AInstanceSegmentationCamera",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d25/classAInstanceSegmentationCamera.html",tooltip="Sensor that produces \"Instance segmentation\" images."];
  Node33 -> Node37 [id="edge38_Node000033_Node000037",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="ANormalsCamera",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/d49/classANormalsCamera.html",tooltip="Sensor that produces \"normals\" images."];
  Node33 -> Node38 [id="edge39_Node000033_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="AOpticalFlowCamera",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d61/classAOpticalFlowCamera.html",tooltip="Sensor that produces \"optical flow\" images."];
  Node33 -> Node39 [id="edge40_Node000033_Node000039",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="ASceneCaptureCamera",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d68/classASceneCaptureCamera.html",tooltip="A sensor that captures images from the scene."];
  Node33 -> Node40 [id="edge41_Node000033_Node000040",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="ASemanticSegmentationCamera",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dad/classASemanticSegmentationCamera.html",tooltip="Sensor that produces \"semantic segmentation\" images."];
  Node21 -> Node41 [id="edge42_Node000021_Node000041",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="AV2XSensor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/dd4/classAV2XSensor.html",tooltip=" "];
  Node0 -> Node42 [id="edge43_Node000000_Node000042",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="ASoilTypeManager",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d1/da5/classASoilTypeManager.html",tooltip=" "];
  Node0 -> Node43 [id="edge44_Node000000_Node000043",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="AStaticMeshCollection",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/dc2/classAStaticMeshCollection.html",tooltip="Holds static mesh instatiators."];
  Node0 -> Node44 [id="edge45_Node000000_Node000044",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="ATagger",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d86/classATagger.html",tooltip="Sets actors' custom depth stencil value for semantic segmentation according to their meshes."];
  Node0 -> Node45 [id="edge46_Node000000_Node000045",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node45 [id="Node000045",label="ATrafficLightGroup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/d12/classATrafficLightGroup.html",tooltip="Class which implements the state changing of traffic lights"];
  Node0 -> Node46 [id="edge47_Node000000_Node000046",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node46 [id="Node000046",label="ATrafficLightManager",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/da5/classATrafficLightManager.html",tooltip="Class In charge of creating and assigning traffic light groups, controllers and components."];
  Node0 -> Node47 [id="edge48_Node000000_Node000047",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node47 [id="Node000047",label="ATrafficSignBase",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/df1/classATrafficSignBase.html",tooltip=" "];
  Node47 -> Node48 [id="edge49_Node000047_Node000048",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node48 [id="Node000048",label="ATrafficLightBase",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d23/classATrafficLightBase.html",tooltip=" "];
  Node0 -> Node49 [id="edge50_Node000000_Node000049",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node49 [id="Node000049",label="AUSDImporterActor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dca/classAUSDImporterActor.html",tooltip=" "];
  Node0 -> Node50 [id="edge51_Node000000_Node000050",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node50 [id="Node000050",label="AUncenteredPivotPointMesh",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$db/dd8/classAUncenteredPivotPointMesh.html",tooltip=" "];
  Node0 -> Node51 [id="edge52_Node000000_Node000051",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node51 [id="Node000051",label="AVegetationManager",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dfc/classAVegetationManager.html",tooltip=" "];
  Node0 -> Node52 [id="edge53_Node000000_Node000052",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node52 [id="Node000052",label="AWalkerAIController",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d70/classAWalkerAIController.html",tooltip="Walker AI Controller representation."];
  Node0 -> Node53 [id="edge54_Node000000_Node000053",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node53 [id="Node000053",label="AWeather",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d75/classAWeather.html",tooltip=" "];
}
