// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file ImagePubSubTypes.h
 * This header file contains the declaration of the serialization functions.
 *
 * This file was generated by the tool fastcdrgen.
 */

#ifndef _FAST_DDS_GENERATED_SENSOR_MSGS_MSG_IMAGE_PUBSUBTYPES_H_
#define _FAST_DDS_GENERATED_SENSOR_MSGS_MSG_IMAGE_PUBSUBTYPES_H_

#include <fastdds/dds/topic/TopicDataType.hpp>
#include <fastrtps/utils/md5.h>

#include "Image.h"

// 如果未定义GEN_API_VER或者GEN_API_VER不等于1
#if!defined(GEN_API_VER) || (GEN_API_VER!= 1)
#error \
    生成的Image与当前安装的Fast DDS不兼容。请使用fastddsgen重新生成它。
#endif  // GEN_API_VER

namespace sensor_msgs
{
    namespace msg
    {
        /*!
         * @brief 此类表示用户在IDL文件中定义的Image类型的主题数据类型。
         * @ingroup IMAGE
         */
        class ImagePubSubType : public eprosima::fastdds::dds::TopicDataType
        {
        public:

            // 定义类型别名
            typedef Image type;

            // 导出函数，用于构造ImagePubSubType对象
            eProsima_user_DllExport ImagePubSubType();

            // 导出虚函数，用于析构ImagePubSubType对象
            eProsima_user_DllExport virtual ~ImagePubSubType() override;

            // 导出虚函数，用于序列化数据
            eProsima_user_DllExport virtual bool serialize(
                    void* data,
                    eprosima::fastrtps::rtps::SerializedPayload_t* payload) override;

            // 导出虚函数，用于反序列化数据
            eProsima_user_DllExport virtual bool deserialize(
                    eprosima::fastrtps::rtps::SerializedPayload_t* payload,
                    void* data) override;

            // 导出虚函数，用于获取序列化大小提供者函数
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(
                    void* data) override;

            // 导出虚函数，用于获取键
            eProsima_user_DllExport virtual bool getKey(
                    void* data,
                    eprosima::fastrtps::rtps::InstanceHandle_t* ihandle,
                    bool force_md5 = false) override;

            // 导出虚函数，用于创建数据
            eProsima_user_DllExport virtual void* createData() override;

            // 导出虚函数，用于删除数据
            eProsima_user_DllExport virtual void deleteData(
                    void* data) override;

        #ifdef TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED
            // 导出内联函数，用于判断是否有界（如果定义了相关宏）
            eProsima_user_DllExport inline bool is_bounded() const override
            {
                return false;
            }

        #endif  // TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED

        #ifdef TOPIC_DATA_TYPE_API_HAS_IS_PLAIN
            // 导出内联函数，用于判断是否为普通类型（如果定义了相关宏）
            eProsima_user_DllExport inline bool is_plain() const override
            {
                return false;
            }

        #endif  // TOPIC_DATA_TYPE_API_HAS_IS_PLAIN

        #ifdef TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE
            // 导出内联函数，用于构造样本（如果定义了相关宏）
            eProsima_user_DllExport inline bool construct_sample(
                    void* memory) const override
            {
                (void)memory;
                return false;
            }

        #endif  // TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE

            // MD5对象，用于计算MD5哈希值
            MD5 m_md5;
            // 指向存储键的缓冲区的指针
            unsigned char* m_keyBuffer;
        };
    }
}

#endif // _FAST_DDS_GENERATED_SENSOR_MSGS_MSG_IMAGE_PUBSUBTYPES_H_
